import json
import urlparse
import logging

def compile_vulnerable_points():
    phase2_ops = ["SQLInjection.json", "DirectoryTraversal.json", "OpenRedirect.json", "ShellCommandInjection.json", "CrossSiteRequestForgery.json"]
    all_attacks = []
    for op in phase2_ops:
        data = json.load(open("response/"+op))
        for url_key in data["results"]:
            data["results"][url_key] = [x for x in data["results"][url_key] if x["success"]==True]
            for result in data["results"][url_key]:
                del result["success"]
                del result["result"]
        all_attacks.append(data)
    with open("vulnerableEndpoints.json", 'w') as fp:
        json.dump(all_attacks, fp, sort_keys=True, indent=4)
    return all_attacks
    
def generate_exploits(all_attacks):
    i=0
    initialize_block = "from selenium import webdriver \nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\nimport os\nchromedriver = \"/usr/lib/chromium-browser/chromedriver\"\nos.environ[\"webdriver.chrome.driver\"] = chromedriver\nbrowser = webdriver.Chrome(chromedriver)"
    for attack_type in all_attacks:
        for url in attack_type["results"]:
            for end_point in attack_type["results"][url]:
                exploit_file = "exploits/exploit"+str(i)+".py"
                i = i+1
                with open(exploit_file, 'w') as ef:
                    ef.write(initialize_block)
                    open_url = urlparse.urljoin(url, end_point["endpoint"])
                    if end_point["method"] == "POST":
                        ef.write("\nbrowser.get(\""+open_url+"\")")
                        for param in end_point["params"]:
                            ef.write("\nbrowser.find_element_by_name(\""+param+"\").send_keys(\""+end_point["params"][param]+"\")")
                        ef.write("\nbrowser.find_element_by_xpath(\"//input[@type='submit']\").submit()")
                    elif end_point["method"] == "GET":
                        param_url = "?"
                        for param in end_point["params"]:
                            param_url = param_url + param + "=" + end_point["params"][param]
                        open_url = urlparse.urljoin(open_url, param_url)
                        ef.write("\nbrowser.get(\""+open_url+"\")")

def main():
    logging.basicConfig(filename='scanner_logs.log', format='%(asctime)s %(message)s', level=logging.DEBUG)
    logging.info('Starting Phase 4: Exploit Generation')
    all_attacks = compile_vulnerable_points()
    generate_exploits(all_attacks)
    logging.info('Completed Phase 4: Exploit Generation\n---------------------\n')

if __name__ == "__main__":
    main()
        


